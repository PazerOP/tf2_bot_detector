name: build

on:
  push:
    paths-ignore:
      - 'schemas/**.json'
      - 'staging/cfg/**.json'
      - '*.md'

jobs:
  ci:
    env:
      TF2BD_BUILD_DIR: "${{ github.workspace }}/tf2bd_cmake_build_dir/"

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        triplet: [x86-windows, x64-windows]
        include:
          - os: windows-latest
            triplet: x86-windows
            tf2bd_arch: x86
            build_arch: Win32
            tf2bd_cmake_generator: VS16Win32
          - os: windows-latest
            triplet: x64-windows
            tf2bd_arch: x64
            build_arch: x64
            tf2bd_cmake_generator: VS16Win64

    steps:
    - uses: olegtarasov/get-tag@v2 # GIT_TAG_NAME
    - uses: benjlevesque/short-sha@v1.1
      id: short_sha

    - name: Config artifact name (tag)
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "::set-env name=TF2BD_VERSION::${{ env.GIT_TAG_NAME }}"

    - name: Config artifact name (SHA)
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: echo "::set-env name=TF2BD_VERSION::${{ steps.short_sha.outputs.sha }}"

    - name: Debug
      run: |
        echo "github.event_name = ${{ github.event_name }}"
        echo "github.sha = ${{ github.sha }}"
        echo "github.ref = ${{ github.ref }}"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: run-vcpkg
      uses: lukka/run-vcpkg@v3.0
      with:
        vcpkgGitCommitId: 7192d3affa4b1d8f88e3e730eb561612c24f7d78
        vcpkgArguments: 'SDL2 openSSL glbinding cpp-httplib libzippp cppcoro'
        vcpkgTriplet: ${{ matrix.triplet }}
        appendedCacheKey: "42-pazer-${{ matrix.triplet }}"

    - name: CMake
      if: ${{ startsWith(matrix.os, 'windows') }}
      run: |
        mkdir "${{ env.TF2BD_BUILD_DIR }}"
        cd "${{ env.TF2BD_BUILD_DIR }}"
        cmake -A${{ matrix.build_arch }} -DTF2BD_IS_CI_COMPILE=ON -DCMAKE_TOOLCHAIN_FILE="${{ env.RUNVCPKG_VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE="${{ env.TF2BD_BUILD_DIR }}" ../
        cmake --build . --config Release

    # - name: run-cmake
    #   uses: lukka/run-cmake@v2.5
    #   with:
    #     cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
    #     useVcpkgToolchainFile: true
    #     cmakeAppendedArgs: '-G "Visual Studio 16 2019" -A${{ matrix.build_arch }} -DTF2BD_IS_CI_COMPILE=on'
    #     #cmakeAppendedArgs: '-DTF2BD_IS_CI_COMPILE=on'
    #     cmakeBuildType: "Release"
    #     buildDirectory: "${{ env.TF2BD_BUILD_DIR }}"
    #     #cmakeGenerator: ${{ matrix.tf2bd_cmake_generator }}

    - name: Sign artifacts
      uses: PazerOP/code-sign-action@v3
      with:
        folder: '${{ env.TF2BD_BUILD_DIR }}'
        certificate: '${{ secrets.CERTIFICATE_PFX_BASE64 }}'
        password: '${{ secrets.CERTIFICATE_PFX_PASSWORD }}'

    - name: "Artifacts: *.exe"
      uses: actions/upload-artifact@v2
      with:
        name: "tf2_bot_detector_${{ matrix.triplet }}_${{ env.TF2BD_VERSION }}"
        path: "${{ env.TF2BD_BUILD_DIR }}/*.exe"
    - name: "Artifacts: *.dll"
      uses: actions/upload-artifact@v2
      with:
        name: "tf2_bot_detector_${{ matrix.triplet }}_${{ env.TF2BD_VERSION }}"
        path: "${{ env.TF2BD_BUILD_DIR }}/*.dll"

    - name: "Artifacts: *.pdb"
      if: ${{ matrix.triplet == 'x86-windows' || matrix.triplet == 'x64-windows' }}
      uses: actions/upload-artifact@v2
      with:
        name: "symbols_${{ matrix.triplet }}_${{ env.TF2BD_VERSION }}"
        path: "${{ env.TF2BD_BUILD_DIR }}/*.pdb"

    - name: "Artifacts: staging dir"
      uses: actions/upload-artifact@v2
      with:
        name: "tf2_bot_detector_${{ matrix.triplet }}_${{ env.TF2BD_VERSION }}"
        path: "${{ github.workspace }}/staging"
