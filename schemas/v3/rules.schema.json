{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "https://raw.githubusercontent.com/PazerOP/tf2_bot_detector/master/schemas/v3/rules.schema.json",
	"title": "TF2 Bot Detector Rules Schema",
	"type": "object",
	"additionalProperties": false,
	"properties": {
		"$schema": {
			"description": "The JSON schema to validate this file against.",
			"type": "string"
		},
		"file_info": {
			"$ref": "./shared.schema.json#/definitions/file_info"
		},
		"rules": {
			"description": "Defines rules for automatically performing actions on players.",
			"type": "array",
			"items": {
				"type": "object",
				"additionalProperties": false,
				"properties": {
					"description": {
						"type": "string",
						"description": "Used to describe this action in the tool."
					},
					"triggers": {
						"type": "object",
						"additionalProperties": false,
						"description": "Determines when this rule should apply.",
						"properties": {
							"mode": {
								"description": "Specifies behavior if there are multiple triggers.",
								"oneOf": [
									{
										"description": "Rule applies when all of the triggers are true.",
										"const": "match_all"
									},
									{
										"description": "Rule applies when any of the triggers are true.",
										"const": "match_any"
									}
								],
								"default": "match_all"
							},
							"username_text_match": {
								"$ref": "#/definitions/tfbd_text_match",
								"description": "Match against the username."
							},
							"chatmsg_text_match": {
								"$ref": "#/definitions/tfbd_text_match",
								"description": "Match against chat messages sent by the player."
							}
						}
					},
					"actions": {
						"type": "object",
						"additionalProperties": false,
						"description": "Actions to take when this rule applies.",
						"properties": {
							"mark": {
								"description": "What attributes to apply to the player.",
								"minItems": 1,
								"$ref": "./shared.schema.json#/definitions/tfbd_player_attributes_array"
							},
							"unmark": {
								"description": "What attributes to remove from the player.",
								"minItems": 1,
								"$ref": "./shared.schema.json#/definitions/tfbd_player_attributes_array"
							}
						}
					}
				},
				"required": [
					"description",
					"triggers",
					"actions"
				]
			}
		}
	},
	"required": [
		"rules"
	],
	"definitions": {
		"tfbd_text_match_group": {
			"oneOf": [
				{
					"type": "string",
					"description": "Matches a single value."
				},
				{
					"type": "object",
					"additionalProperties": false,
					"description": "Matches one or multiple values",
					"properties": {
						"mode": {
							"description": "The matching mode.",
							"enum": [
								"match_all",
								"match_any"
							]
						},
						"values": {
							"type": "array",
							"description": "List of values to match.",
							"items": {
								"$ref": "#/definitions"
							}
						}
					}
				}
			]
		},
		"tfbd_text_match": {
			"type": "object",
			"additionalProperties": false,
			"description": "Defines a method of matching text",
			"properties": {
				"mode": {
					"description": "The matching mode.",
					"oneOf": [
						{
							"description": "Text that exactly matches the given value.",
							"const": "equal"
						},
						{
							"description": "Text contained anywhere in the body of another section of text.",
							"const": "contains"
						},
						{
							"description": "Text that begins with the given value.",
							"const": "starts_with"
						},
						{
							"description": "Text that ends with the given value.",
							"const": "ends_with"
						},
						{
							"description": "Text that matches the given ECMAScript regular expression.",
							"const": "regex"
						},
						{
							"description": "Text that contains the given word.",
							"const": "word"
						}
					]
				},
				"patterns": {
					"description": "The matching patterns. If any of these are successful, the entire match is successful.",
					"type": "array",
					"minItems": 1,
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				},
				"case_sensitive": {
					"type": "boolean",
					"description": "Controls whether the matching is case sensitive or not.",
					"default": false
				}
			},
			"required": [
				"mode",
				"patterns"
			]
		}
	}
}
